--CREO TABLA USUARIOS
CREATE TABLE LA_Usuario(
    ID_Usu_NumeroDocumento INT PRIMARY KEY NOT NULL,
    Usu_NombreCompleto VARCHAR(100) NOT NULL,
    Usu_TipoDoc VARCHAR(15) NOT NULL,
    Usu_TelefonoResidencial INT NOT NULL,
    Usu_TelefonoMovil INT NOT NULL,
    Usu_Pais VARCHAR(50) NOT NULL,
    Usu_Departamento VARCHAR(50) NOT NULL,
    Usu_CiudadResidencia VARCHAR(50) NOT NULL,
    Usu_Direccion VARCHAR(250) NOT NULL,
    Usu_Profesion VARCHAR(80),
    Usu_Email VARCHAR(70) NOT NULL,
    Usu_Rol VARCHAR(50) NOT NULL,
    Usu_Estado INT   
);

INSERT INTO LA_Usuario VALUES(3050000040117,'Daniel Rivas','DPI/CUI',66314545,45024363,'Guatemala','Guatemala','Ciudad de Guatemala','Petapa','Programador','danielrivas1.gt@gmail.com','Administrador',1);




--PROCEDIMIENTO INSERTAR CLIENTE (INSERT)
CREATE OR REPLACE PROCEDURE INSERTA_USUARIO
(
    ID_Usu_NumeroDocumento INT, 
    Usu_NombreCompleto VARCHAR,
    Usu_TipoDoc VARCHAR, 
    Usu_TelefonoResidencial INT, 
    Usu_TelefonoMovil INT, 
    Usu_Pais VARCHAR,
    Usu_Departamento VARCHAR,
    Usu_CiudadResidencia VARCHAR,
    Usu_Direccion VARCHAR, 
    Usu_Profesion VARCHAR,
    Usu_Email VARCHAR, 
    Usu_Rol VARCHAR, 
    Usu_Estado INT
)
AS 
BEGIN
    INSERT INTO LA_Usuario VALUES(ID_Usu_NumeroDocumento, Usu_NombreCompleto,
    Usu_TipoDoc, Usu_TelefonoResidencial, Usu_TelefonoMovil, Usu_Pais, Usu_Departamento, 
    Usu_CiudadResidencia, Usu_Direccion, Usu_Profesion, Usu_Email, Usu_Rol, Usu_Estado);
END;




--PROCEDURE PARA ACTUALIZAR DATOS DEL CLIENTE (UPDATE)
CREATE OR REPLACE PROCEDURE UPDATE_CLIENTE
(
    id_usuario IN INT, 
    nombreCompleto IN VARCHAR,
    tipoDoc IN VARCHAR,
    telefonoResidencial IN NUMBER,
    telefonoMovil IN NUMBER,
    pais IN VARCHAR,
    departamento IN VARCHAR,
    ciudadResidencia IN VARCHAR,
    direccion IN VARCHAR,
    profesion IN VARCHAR,
    email IN VARCHAR,
    rol IN VARCHAR,
    usuEstado IN INT
)
AS
BEGIN
    UPDATE la_usuario SET usu_nombrecompleto = nombreCompleto, usu_tipodoc = tipoDoc, usu_telefonoresidencial = telefonoResidencial, usu_telefonomovil = telefonoMovil,
    Usu_Pais = pais, usu_departamento = departamento, usu_ciudadresidencia = ciudadresidencia, usu_direccion = direccion, usu_profesion = profesion,
    usu_email = email, usu_rol = rol, usu_estado = usuEstado
    WHERE ID_Usu_NumeroDocumento = id_usuario;
END;



--PROCEDURE PARA ACTUALIZAR DATOS DEL CLIENTE EN PANTALLA CLIENTE
CREATE OR REPLACE PROCEDURE UPDATE_CLIENTE_PANTALLA_CLIENTE
(
    id_usuario IN INT, 
    nombreCompleto IN VARCHAR,
    telefonoResidencial IN NUMBER,
    telefonoMovil IN NUMBER,
    pais IN VARCHAR,
    departamento IN VARCHAR,
    ciudadResidencia IN VARCHAR,
    direccion IN VARCHAR,
    profesion IN VARCHAR,
    email IN VARCHAR
)
AS
BEGIN
    UPDATE la_usuario SET usu_nombrecompleto = nombreCompleto, usu_telefonoresidencial = telefonoResidencial, usu_telefonomovil = telefonoMovil,
                          usu_pais = pais, usu_departamento = departamento, usu_ciudadresidencia = ciudadresidencia, usu_direccion = direccion, usu_profesion = profesion,
                          usu_email = email WHERE ID_Usu_NumeroDocumento = id_usuario;
END;

SELECT * FROM LA_USUARIO;
SELECT * FROM LA_COMPRA_FACTURA;



--PROCEDURE PARA BORRAR UN CLIENTE POR ID (DELETE WHERE ID)
CREATE OR REPLACE PROCEDURE DELETE_CLIENTE
(
    id_usuario int
)
AS
BEGIN
    DELETE LA_Usuario WHERE id_usu_numerodocumento = id_usuario;
END;



--PROCEDIMIENTO PARA MOSTRAR CLEINTES
CREATE OR REPLACE PROCEDURE MOSTRAR_CLIENTES
(
    registros out sys_refcursor
)
AS
BEGIN
    OPEN registros FOR SELECT ID_USU_NUMERODOCUMENTO AS Numero_Documento, USU_NOMBRECOMPLETO AS Nombre_Completo, 
                              USU_TIPODOC AS Tipo_Documento, USU_TELEFONORESIDENCIAL AS Telefono_Residencial, 
                              USU_TELEFONOMOVIL AS Telefono_Movil, USU_PAIS AS Pais, USU_DEPARTAMENTO AS Departamento, 
                              USU_CIUDADRESIDENCIA AS Ciudad, USU_DIRECCION AS Direccion, USU_PROFESION AS Profesion,
                              USU_EMAIL AS Email, USU_ROL AS Rol
                              FROM LA_Usuario;
END;



--PROCEDIMIENTO PARA BUSCAR CON WHERE LIKE
CREATE OR REPLACE PROCEDURE BUSCAR_CLIENTES
(
    datoBusqueda VARCHAR,
    reg out sys_refcursor
)
AS
BEGIN
    OPEN reg FOR SELECT ID_USU_NUMERODOCUMENTO AS Numero_Documento, USU_NOMBRECOMPLETO AS Nombre_Completo, 
                              USU_TIPODOC AS Tipo_Documento, USU_TELEFONORESIDENCIAL AS Telefono_Residencial,
                              USU_TELEFONOMOVIL AS Telefono_Movil, USU_PAIS AS Pais, USU_DEPARTAMENTO AS Departamento,
                              USU_CIUDADRESIDENCIA AS Ciudad, USU_DIRECCION AS Direccion, USU_PROFESION AS Profesion,
                              USU_EMAIL AS Email, USU_ROL AS Rol FROM LA_Usuario WHERE ID_USU_NUMERODOCUMENTO LIKE datoBusqueda
                              OR USU_NOMBRECOMPLETO LIKE datoBusqueda OR USU_TIPODOC LIKE datoBusqueda OR USU_TELEFONORESIDENCIAL LIKE datoBusqueda
                              OR USU_TELEFONOMOVIL LIKE datoBusqueda OR USU_PAIS LIKE datoBusqueda OR USU_DEPARTAMENTO LIKE datoBusqueda OR USU_CIUDADRESIDENCIA LIKE datoBusqueda
                              OR USU_DIRECCION LIKE datoBusqueda OR USU_PROFESION LIKE datoBusqueda OR USU_EMAIL LIKE datoBusqueda OR USU_ROL LIKE datoBusqueda;
END;



--PROCEDIMIENTO PARA BUSCAR CLIENTE POR ID
CREATE OR REPLACE PROCEDURE BUSCAR_CLIENTES_POR_ID
(
    idCliente VARCHAR,
    cliente out sys_refcursor
)
AS
BEGIN
    OPEN cliente FOR SELECT COUNT(*) AS NOMBRECLIENTE 
                     FROM LA_USUARIO WHERE ID_USU_NUMERODOCUMENTO = idCliente;
END;



--PROCEDIMIENTO PARA INGRESAR AL SISTEMA SEGÚN CORREO Y NUMERO DE DOCUMENTO
CREATE OR REPLACE PROCEDURE INGRESAR_SISTEMA
(
    email VARCHAR,
    numeroDoc INT,
    registros out sys_refcursor
)
AS
BEGIN
     OPEN registros FOR SELECT COUNT(*) FROM LA_USUARIO WHERE USU_EMAIL = email AND ID_USU_NUMERODOCUMENTO = numeroDoc AND USU_ROL = 'Administrador';
END;



--CREO TABLA PRODUCTO
CREATE TABLE LA_PRODUCTO(
    PRO_ID INT PRIMARY KEY NOT NULL,
    PRO_NOMBRE VARCHAR(250) NOT NULL,
    PRO_DESCRIPCION VARCHAR(500) NOT NULL,
    PRO_TIPO VARCHAR(50) NOT NULL,
    PRO_MATERIAL VARCHAR(50) NOT NULL,
    PRO_ALTO NUMBER(10,2) NOT NULL,
    PRO_ANCHO NUMBER(10,2) NOT NULL,
    PRO_PROFUNDIDAD NUMBER(10,2) NOT NULL,
    PRO_COLOR VARCHAR(50),
    PRO_PESO NUMBER(10,2),    
    PRO_PRECIO NUMBER(10,2) NOT NULL,
    PRO_CANTIDAD INT NOT NULL,
    PRO_ESTADO INT NOT NULL,--1 ACTIVO /0 INACTIVO}
    PRO_RUTA_IMAGEN VARCHAR(80)
);



--CODIGO QUE HACE EL PRIMARY KEY AUTO INCREMENTABLE (SE HACE UNA POR TABLA)
CREATE SEQUENCE AUTOINCREMENTABLE_PRODUCTO
--INICIA EN 1
START WITH 1
--ICREMENTA 1
INCREMENT BY 1;



--PROCEDIMIENTO INSERTAR PRODUCTO
CREATE OR REPLACE PROCEDURE INSERTA_PRODUCTO
(
    PRONOMBRE VARCHAR,
    PRODESCRIPCION VARCHAR,
    PROTIPO VARCHAR,
    PROMATERIAL VARCHAR,
    PROALTO NUMBER,
    PROANCHO NUMBER,
    PROPROFUNDIDAD NUMBER,
    PROCOLOR VARCHAR,
    PROPESO NUMBER,    
    PROPRECIO NUMBER,
    PROCANTIDAD INT,
    PROESTADO INT,
    PROIMAGEN VARCHAR
)
AS 
BEGIN
    INSERT INTO LA_PRODUCTO VALUES (AUTOINCREMENTABLE_PRODUCTO.nextval,PRONOMBRE,PRODESCRIPCION,PROTIPO,
                                    PROMATERIAL,PROALTO,PROANCHO,PROPROFUNDIDAD,PROCOLOR,PROPESO,PROPRECIO,
                                    PROCANTIDAD,PROESTADO,PROIMAGEN);
END;


--PROCEDIMIENTO EDITAR PRODUCTO
CREATE OR REPLACE PROCEDURE EDITAR_PRODUCTO
(   
    PROID IN INT,
    PRONOMBRE VARCHAR,
    PRODESCRIPCION VARCHAR,
    PROTIPO VARCHAR,
    PROMATERIAL VARCHAR,
    PROALTO NUMBER,
    PROANCHO NUMBER,
    PROPROFUNDIDAD NUMBER,
    PROCOLOR VARCHAR,
    PROPESO NUMBER,    
    PROPRECIO NUMBER,
    PROCANTIDAD INT,    
    PROIMAGEN VARCHAR
)
AS 
BEGIN
    UPDATE LA_PRODUCTO SET Pro_Nombre = PRONOMBRE, Pro_Descripcion = PRODESCRIPCION, Pro_Tipo = PROTIPO, Pro_Material = PROMATERIAL, Pro_Alto = PROALTO,
                           Pro_Ancho = PROANCHO, Pro_Profundidad = PROPROFUNDIDAD, Pro_Color = PROCOLOR, Pro_Peso = PROPESO, Pro_Precio = PROPRECIO, 
                           Pro_Cantidad = PROCANTIDAD, Pro_Ruta_Imagen = PROIMAGEN WHERE PRO_ID = PROID;
END;



--PROCEDURE PARA BORRAR UN PRODUCTO POR ID
CREATE OR REPLACE PROCEDURE DELETE_PRODUCTO
(
    PROID IN INT
)
AS
BEGIN
    DELETE LA_PRODUCTO WHERE PRO_ID = PROID;
END;



--PROCEDIMIENTO PARA MOSTRAR PRODUCTOS
CREATE OR REPLACE PROCEDURE MOSTRAR_PRODUCTOS
(
    registros out sys_refcursor
)
AS
BEGIN
    OPEN registros FOR SELECT PRO_ID AS Codigo_Producto, PRO_NOMBRE AS Nombre, 
                              PRO_DESCRIPCION AS Descripcion, PRO_TIPO AS Tipo, 
                              PRO_MATERIAL AS Material, 'ALTO: ' || PRO_ALTO || ', ANCHO: ' || PRO_ANCHO || ', PROFUNDIDAD: ' || PRO_PROFUNDIDAD AS Medidas,
                              PRO_COLOR AS Color, PRO_PESO AS Peso, PRO_PRECIO AS Precio_Unitario, PRO_CANTIDAD, PRO_RUTA_IMAGEN AS Ruta_Imagen FROM LA_PRODUCTO
                              ORDER BY PRO_ID ASC;
END;



--PROCEDIMIENTO PARA MOSTRAR PRODUCTOS PARA COMPRAR
CREATE OR REPLACE PROCEDURE MOSTRAR_PRODUCTOS_COMPRAR
(
    registros out sys_refcursor
)
AS
BEGIN
    OPEN registros FOR SELECT PRO_ID, PRO_NOMBRE, PRO_PRECIO, PRO_DESCRIPCION, PRO_RUTA_IMAGEN FROM LA_PRODUCTO ORDER BY PRO_ID ASC;
END;



--PROCEDIMIENTO PARA MOSTRAR PRODUCTOS POR ID EN EL DETALLE
CREATE OR REPLACE PROCEDURE MOSTRAR_PRODUCTOS_DETALLE
(
    idProdFiltrar IN INT,
    productosDetalle out sys_refcursor
)
AS
BEGIN
    OPEN productosDetalle FOR SELECT PRO_ID, PRO_NOMBRE, PRO_DESCRIPCION, PRO_PRECIO, PRO_RUTA_IMAGEN FROM LA_PRODUCTO  WHERE PRO_ID = idProdFiltrar;
END;



--PROCEDIMIENTO PARA BUSCAR CON WHERE LIKE
CREATE OR REPLACE PROCEDURE BUSCAR_PRODUCTOS
(
    datoBusqueda VARCHAR,
    reg out sys_refcursor
)
AS
BEGIN
    OPEN reg FOR SELECT PRO_ID AS Codigo_Producto, PRO_NOMBRE AS Nombre, 
                        PRO_DESCRIPCION AS Descripcion, PRO_TIPO AS Tipo, 
                        PRO_MATERIAL AS Material, 'ALTO: ' || PRO_ALTO || ', ANCHO: ' || PRO_ANCHO || ', PROFUNDIDAD: ' || PRO_PROFUNDIDAD AS Medidas,
                        PRO_COLOR AS Color, PRO_PESO AS Peso, PRO_PRECIO AS Precio_Unitario, PRO_CANTIDAD AS Cantidad FROM LA_PRODUCTO
                        WHERE PRO_ID LIKE datoBusqueda OR PRO_NOMBRE LIKE datoBusqueda OR PRO_DESCRIPCION LIKE datoBusqueda OR PRO_TIPO LIKE datoBusqueda
                        OR PRO_MATERIAL LIKE datoBusqueda OR PRO_ALTO LIKE datoBusqueda OR PRO_ANCHO LIKE datoBusqueda OR PRO_PROFUNDIDAD LIKE datoBusqueda
                        OR PRO_COLOR LIKE datoBusqueda OR PRO_PESO LIKE datoBusqueda OR PRO_PRECIO LIKE datoBusqueda OR PRO_CANTIDAD LIKE datoBusqueda;
END;




--TABLA CARRITOS DE COMPRAS (TEMPORAL O PERMANENTE PARA FACTURAS)
CREATE TABLE LA_CARRITO_PRODUCTOS
(
    ID_REFERENCIA_COMPRA INT PRIMARY KEY NOT NULL,
    CARRITO_IDPRODUCTO INT,
    CANTIDAD_COMPRAPRODUCTO INT NOT NULL,
    CARRITO_TOTAL_COMPRA NUMBER,
    FOREIGN KEY (CARRITO_IDPRODUCTO) REFERENCES LA_PRODUCTO(PRO_ID)
);



--CODIGO QUE HACE EL PRIMARY KEY AUTO INCREMENTABLE (SE HACE UNA POR TABLA)
CREATE SEQUENCE AUTOINCREMENTABLE_REF_CARRITO
--INICIA EN 0001
    START WITH 1
--ICREMENTA 1
INCREMENT BY 1;



--PROCEDIMIENTO INSERTAR PRODUCTO
CREATE OR REPLACE PROCEDURE INSERTA_CARRITO
(
    carritoIdProducto IN INT,
    cantidadCompraProducto IN INT,
    totalProducto IN NUMBER
)
AS 
BEGIN
    INSERT INTO LA_CARRITO_PRODUCTOS VALUES (AUTOINCREMENTABLE_REF_CARRITO.nextval,carritoIdProducto,cantidadCompraProducto,totalProducto);
END;



--PROCEDIMIENTO PARA LISTAR LOS PRODUCTOS DEL CARRITO
CREATE OR REPLACE PROCEDURE MOSTRAR_PRODUCTOS_CARRITO
(
    prods out sys_refcursor
)
AS
BEGIN
    OPEN prods FOR SELECT PRO_ID AS COD, PRO_NOMBRE AS Producto, PRO_PRECIO AS Precio, CANTIDAD_COMPRAPRODUCTO AS Cantidad,CARRITO_TOTAL_COMPRA AS Total FROM LA_CARRITO_PRODUCTOS
                   INNER JOIN LA_PRODUCTO ON PRO_ID = CARRITO_IDPRODUCTO;
END;



--PROCEDIMIENTO PARA OBTENER LA CANTIDAD DE NÚMERO DE PRODUCTOS EN CARRITO
CREATE OR REPLACE PROCEDURE CONTAR_PRODUCTOS_CARRITO
(
    prodsCarrito out sys_refcursor
)
AS
BEGIN
    OPEN prodsCarrito FOR SELECT COUNT(*) FROM LA_CARRITO_PRODUCTOS;
END;



--PROCEDIMIENTO PARA OBTENER LA CANTIDAD DE NÚMERO DE PRODUCTOS EN CARRITO
CREATE OR REPLACE PROCEDURE SUMAR_TOTAL_COMPRA_CARRITO
(
    sumaTotalCompra out sys_refcursor
)
AS
BEGIN
    OPEN sumaTotalCompra FOR SELECT SUM(CARRITO_TOTAL_COMPRA) AS Total FROM LA_CARRITO_PRODUCTOS;
END;



--PROCEDURE PARA BORRAR UN PRODUCTO DEL CARRITO POR ID (DELETE WHERE ID)
CREATE OR REPLACE PROCEDURE BORRAR_CARRITO_POR_ID
(
    idProdCarrito IN INT
)
AS
BEGIN
    DELETE LA_CARRITO_PRODUCTOS WHERE CARRITO_IDPRODUCTO = idProdCarrito;
END;



--PROCEDURE PARA BORRAR TODO EL CONTENIDO DEL CARRITO
CREATE OR REPLACE PROCEDURE BORRAR_TODO_EL_CARRITO
AS
BEGIN
    DELETE LA_CARRITO_PRODUCTOS;
END;



--TABLA PARA FACTURAR LAS COMPRAS
CREATE TABLE LA_COMPRA_FACTURA
(
    ID_COMPRA_CORRELATIVO INT PRIMARY KEY NOT NULL,
    REFERENCIA_COMPRA VARCHAR(50) NOT NULL,
    ID_COMPRA_USUARIO INT,
    CARRITO_IDPRODUCTO INT,
    CANTIDAD_COMPRAPRODUCTO INT,
    CARRITO_TOTAL_COMPRA NUMBER,
    COMPRA_METODO_PAGO VARCHAR(50) NOT NULL, 
    COMPRA_FECHA_COMPRA VARCHAR(50) NOT NULL,
    FOREIGN KEY (CARRITO_IDPRODUCTO) REFERENCES LA_PRODUCTO(PRO_ID),
    FOREIGN KEY (ID_COMPRA_USUARIO) REFERENCES LA_USUARIO(ID_Usu_NumeroDocumento)
);

SELECT * FROM LA_COMPRA_FACTURA ORDER BY ID_COMPRA_CORRELATIVO ASC;


--CODIGO QUE HACE EL PRIMARY KEY AUTO INCREMENTABLE (SE HACE UNA POR TABLA)
CREATE SEQUENCE AUTOINCREMENTABLE_COMPRA_FACTURA
--INICIA EN 1
START WITH 1
--ICREMENTA 1
INCREMENT BY 1;



--PROCEDIMIENTO INSERTAR VENTA FINAL
CREATE OR REPLACE PROCEDURE INSERTA_VENTA_FACTURA
(
    REFERENCIACOMPRA IN VARCHAR,
    IDCOMPRAUSUARIO IN INT,
    CARRITOIDPRODUCTO IN INT,
    CANTIDADCOMPRAPRODUCTO IN INT,
    CARRITOTOTALCOMPRA IN NUMBER,
    METODOPAGO IN VARCHAR,
    FECHACOMPRA IN VARCHAR
)
AS 
BEGIN
    INSERT INTO LA_COMPRA_FACTURA VALUES (AUTOINCREMENTABLE_COMPRA_FACTURA.nextval,REFERENCIACOMPRA,IDCOMPRAUSUARIO,CARRITOIDPRODUCTO,
                                          CANTIDADCOMPRAPRODUCTO,CARRITOTOTALCOMPRA,METODOPAGO,FECHACOMPRA);
END;



--PROCEDIMIENTO PARA LISTAR LAS VENTAS POR REFERENCIA DE COMPRA
CREATE OR REPLACE PROCEDURE BUSCAR_COMPRA
(
    numeroReferencia IN VARCHAR,
    compraEfectuada out sys_refcursor
)
AS
BEGIN
    OPEN compraEfectuada FOR SELECT ID_COMPRA_CORRELATIVO AS ID, ID_COMPRA_USUARIO AS Usuario, Usu_Email AS Email, Usu_NombreCompleto AS Nombre_Cliente, 
                             USU_TELEFONORESIDENCIAL AS Telefono_Residencial, USU_TELEFONOMOVIL AS Telefono_Movil, USU_PAIS AS Pais, 
                             USU_DEPARTAMENTO AS Departamento, USU_CIUDADRESIDENCIA AS Ciudad, USU_DIRECCION as Direccion, PRO_NOMBRE AS Producto, CANTIDAD_COMPRAPRODUCTO AS Cantidad,
                             CARRITO_TOTAL_COMPRA AS Total, COMPRA_METODO_PAGO AS Metodo_De_Pago, COMPRA_FECHA_COMPRA AS Fecha_Compra FROM LA_COMPRA_FACTURA
                             INNER JOIN LA_PRODUCTO ON PRO_ID = CARRITO_IDPRODUCTO INNER JOIN LA_USUARIO ON ID_Usu_NumeroDocumento = ID_COMPRA_USUARIO WHERE REFERENCIA_COMPRA = numeroReferencia;
END;




--PROCEDIMIENTO PARA LISTAR REPORTE DE VENTAS DIARIAS
--AGRUPADO POR MUEBLES INTERIOR Y EXTERIOR
CREATE OR REPLACE PROCEDURE REPORTE_VENTAS_DIARIA
(
    fechaDia IN VARCHAR,
    reporteVentaDiaria out sys_refcursor
)
AS
BEGIN
    OPEN reporteVentaDiaria FOR SELECT DISTINCT PRO_TIPO AS Tipo, PRO_NOMBRE AS Nombre, CANTIDAD_COMPRAPRODUCTO AS Cantidad,
                                PRO_PRECIO AS Unitario, CARRITO_TOTAL_COMPRA AS Total, COMPRA_FECHA_COMPRA AS Fecha_Compra FROM LA_COMPRA_FACTURA
                                INNER JOIN LA_PRODUCTO ON PRO_ID = CARRITO_IDPRODUCTO INNER JOIN LA_USUARIO ON ID_Usu_NumeroDocumento = ID_COMPRA_USUARIO
                                WHERE COMPRA_FECHA_COMPRA = fechaDia
                                GROUP BY PRO_TIPO, PRO_NOMBRE, CANTIDAD_COMPRAPRODUCTO,PRO_PRECIO,CARRITO_TOTAL_COMPRA,COMPRA_FECHA_COMPRA ORDER BY PRO_TIPO ASC;
END;



--PROCEDIMIENTO PARA LISTAR REPORTE DE VENTAS DIARIAS
--OBTENIENDO EL TOTAL DE LA VENTA AL DIA
CREATE OR REPLACE PROCEDURE TOTAL_VENTAS_DIARIA
(
    fechaDia IN VARCHAR,
    totalVentaDiaria out sys_refcursor
)
AS
BEGIN
    OPEN totalVentaDiaria FOR SELECT 'Q' || SUM(CARRITO_TOTAL_COMPRA) AS TOTAL_VENTA_DIARIA FROM LA_COMPRA_FACTURA WHERE compra_fecha_compra = fechaDia;
END;



--PROCEDIMIENTO PARA LISTAR EL REPORTE DE COMPRAS
--REALIZADAS POR UN CLIENTE, ORDENADAS POR FECHA
--DE COMPRA
CREATE OR REPLACE PROCEDURE COMPRAS_X_CLIENTE
(
    cliente IN INT,
    compraXCliente out sys_refcursor
)
AS
BEGIN
    OPEN compraXCliente FOR SELECT COMPRA_FECHA_COMPRA AS Fecha_Compra, 'Q' || CARRITO_TOTAL_COMPRA AS Valor_Compra, COMPRA_METODO_PAGO AS Forma_Pago, PRO_NOMBRE AS Mueble
                                FROM LA_COMPRA_FACTURA
                                INNER JOIN LA_PRODUCTO ON PRO_ID = CARRITO_IDPRODUCTO INNER JOIN LA_USUARIO ON ID_Usu_NumeroDocumento = ID_COMPRA_USUARIO
                                WHERE ID_USU_NUMERODOCUMENTO = cliente ORDER BY COMPRA_FECHA_COMPRA ASC;
END;




--PROCEDIMIENTO PARA LISTAR EL REPORTE DEL PRODUCTO
--MAS VENDIDO POR RANGO DE FECHAS
CREATE OR REPLACE PROCEDURE PRODUCTO_MAS_VENDIDO
(
    fechaInicio IN VARCHAR,
    fechaFin IN VARCHAR,
    prodMasVendido out sys_refcursor
)
AS
BEGIN
    OPEN prodMasVendido FOR SELECT DISTINCT PRO_NOMBRE AS Nombre_Producto, COUNT(PRO_NOMBRE) AS Veces_Vendido FROM LA_COMPRA_FACTURA
                                INNER JOIN LA_PRODUCTO ON PRO_ID = CARRITO_IDPRODUCTO INNER JOIN LA_USUARIO ON ID_Usu_NumeroDocumento = ID_COMPRA_USUARIO
                                WHERE COMPRA_FECHA_COMPRA BETWEEN fechaInicio AND fechaFin GROUP BY PRO_NOMBRE ORDER  BY COUNT(PRO_NOMBRE) DESC FETCH FIRST 1 ROW ONLY;
END;



--PROCEDIMIENTO PARA LISTAR EL REPORTE DEL PRODUCTO
--CON LAS CIUDADES Y EL TIPO DE MUEBLE QUE ES
CREATE OR REPLACE PROCEDURE CIUDAD_TIPO_PRODUCTO_MAS_VENDIDO
(
    nombreProducto IN VARCHAR,
    registros out sys_refcursor
)
AS
BEGIN
    OPEN registros FOR SELECT DISTINCT USU_CIUDADRESIDENCIA AS Ciudad, PRO_TIPO AS Tipo FROM LA_COMPRA_FACTURA
                                INNER JOIN LA_PRODUCTO ON PRO_ID = CARRITO_IDPRODUCTO INNER JOIN LA_USUARIO ON ID_Usu_NumeroDocumento = ID_COMPRA_USUARIO
                                WHERE PRO_NOMBRE = nombreProducto;
END;



                                




/*
    Sentencias DROP para borrar las tablas y procedimientos
*/

DROP TABLE LA_Usuario;
DROP PROCEDURE INSERTA_USUARIO;
DROP PROCEDURE UPDATE_CLIENTE;
DROP PROCEDURE UPDATE_CLIENTE_PANTALLA_CLIENTE;
DROP PROCEDURE MOSTRAR_CLIENTES;
DROP PROCEDURE DELETE_CLIENTE;
DROP PROCEDURE BUSCAR_CLIENTES_POR_ID;
DROP TABLE LA_PRODUCTO;
DROP SEQUENCE AUTOINCREMENTABLE_PRODUCTO;
DROP PROCEDURE INSERTA_PRODUCTO;
DROP PROCEDURE MOSTRAR_PRODUCTOS;
DROP PROCEDURE MOSTRAR_PRODUCTOS_COMPRAR;
DROP PROCEDURE BUSCAR_PRODUCTOS;
DROP PROCEDURE EDITAR_PRODUCTO;
DROP PROCEDURE DELETE_PRODUCTO;
DROP TABLE LA_CARRITO_PRODUCTOS;
DROP SEQUENCE AUTOINCREMENTABLE_REF_CARRITO;
DROP PROCEDURE INSERTA_CARRITO;
DROP PROCEDURE BORRAR_TODO_EL_CARRITO;
DROP PROCEDURE BORRAR_CARRITO_POR_ID;
DROP PROCEDURE CONTAR_PRODUCTOS_CARRITO;
DROP PROCEDURE MOSTRAR_PRODUCTOS_CARRITO;
DROP PROCEDURE SUMAR_TOTAL_COMPRA_CARRITO;
DROP PROCEDURE MOSTRAR_PRODUCTOS_DETALLE;
DROP PROCEDURE INSERTA_VENTA_FACTURA;
DROP PROCEDURE BUSCAR_COMPRA;
DROP PROCEDURE REPORTE_VENTAS_DIARIA;
DROP PROCEDURE TOTAL_VENTAS_DIARIA;
DROP PROCEDURE COMPRAS_X_CLIENTE;
DROP PROCEDURE PRODUCTO_MAS_VENDIDO;
DROP PROCEDURE CIUDAD_TIPO_PRODUCTO_MAS_VENDIDO;
DROP SEQUENCE AUTOINCREMENTABLE_COMPRA_FACTURA;
DROP TABLE LA_COMPRA_FACTURA;



